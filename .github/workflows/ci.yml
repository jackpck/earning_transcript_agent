name: CI Pipeline

on:
  push:
    branches: [ main , mvp2]
  pull_request:
    branches: [ main , mvp2]

jobs:
  # Run tests with pytest
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.6"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run pytest
        run: python -m pytest -v tests/ --maxfail=1 --disable-warnings
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
          LANGSMITH_WORKSPACE_ID: ${{ secrets.LANGSMITH_WORKSPACE_ID }}
          LANGSMITH_ENDPOINT: ${{ vars.LANGSMITH_ENDPOINT }}
          LANGSMITH_PROJECT: ${{ vars.LANGSMITH_PROJECT }}
          LANGSMITH_TRACING: ${{ vars.LANGSMITH_TRACING }}
          LANGCHAIN_CALLBACKS_BACKGROUND: ${{ vars.LANGCHAIN_CALLBACKS_BACKGROUND }}

  # Build and push Docker image (only if tests pass)
  docker:
    needs: test   # only runs if 'test' job succeeds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: jackypck/earning_call_agent:latest
          platforms: linux/amd64,linux/arm64 # allow running on Apple ARM cpu
